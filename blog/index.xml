<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on 👽 Alienwer&#39;s blog 👽</title>
    <link>https://alienwer.github.io/blog/</link>
    <description>Recent content in Blog on 👽 Alienwer&#39;s blog 👽</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright © 2020, Alienwer.</copyright>
    <lastBuildDate>Wed, 20 Mar 2024 12:27:03 +0800</lastBuildDate>
    <atom:link href="https://alienwer.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>20240321 笛卡尔空间轨迹规划note</title>
      <link>https://alienwer.github.io/20240321-%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A9%BA%E9%97%B4%E8%BD%A8%E8%BF%B9%E8%A7%84%E5%88%92note/</link>
      <pubDate>Wed, 20 Mar 2024 12:27:03 +0800</pubDate>
      <guid>https://alienwer.github.io/20240321-%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A9%BA%E9%97%B4%E8%BD%A8%E8%BF%B9%E8%A7%84%E5%88%92note/</guid>
      <description>1我要进行笛卡尔空间规划，为什么还要将路径上的每个笛卡尔空间点逆解为对应的关节角度，使用关节空间轨迹规划算法规划机械臂的轨迹呢? 将路径上的每个笛卡尔空间点逆解为对应的关节角度，使用关节空间轨迹规划算法规划机械臂的轨迹的目的是为了保证机械臂能够精确地沿着所规划的轨迹运动。虽然笛卡尔空间规划方法能够方便地指定机械臂的运动轨迹，但是由于机械臂的构造和限制，实际上只能够通过关节角度来控制机械臂的运动。因此，在进行轨迹规划时，需要将笛卡尔空间点逆解为关节角度，然后再使用关节空间轨迹规划算法来规划机械臂的轨迹，以保证机械臂能够按照指定的轨迹进行运动。&#xA;2求解为关节角度不就可以控制机械臂了，还要进行关节空间规划干什么? 关节角度只能表示机械臂的状态，无法直接表示机械臂的轨迹。关节空间规划算法可以将机械臂从起始点运动到目标点的轨迹规划出来，而不仅仅是运动的终点。通过规划出的轨迹，可以使机械臂实现平滑的运动，并且可以满足运动过程中的各种约束条件，比如速度、加速度、关节转动角度限制等等，从而保证机械臂的运动安全、稳定、高效。&#xA;3笛卡尔规划出来的空间圆弧直接求逆解不行吗，必须要转到关节空间下再进一次轨迹规划吗? 笛卡尔规划出来的空间圆弧可以求逆解直接控制机械臂运动，但是这样做可能存在一些问题。由于机械臂的运动不是完全理想的，因此即使在空间规划时规划的轨迹符合要求，但在实际运动中可能会出现一些误差，导致机械臂的末端位置与规划的轨迹略有偏差。这个偏差可能很小，但随着机械臂运动时间的增加，这个偏差可能会累积，最终导致机械臂无法准确到达规划的目标位置。因此，为了提高运动的准确性和稳定性，在进行笛卡尔空间规划后，通常需要将轨迹点转换为关节角度，并进行关节空间轨迹规划，以减小运动误差，确保机械臂能够准确到达目标位置。&#xA;4那笛卡尔空间轨迹规划完成后的应该是很多离散点吧? 是的，笛卡尔空间轨迹规划完成后通常会得到一系列离散点，这些点代表机械臂在规划过程中应该经过的轨迹上的位置。这些离散点可以通过插值或者平滑算法进行处理，得到更加连续的轨迹，然后再将其转化为机械臂的关节角度序列，进行关节空间轨迹规划。&#xA;5是在笛卡尔空间下进行平滑处理后就求逆解控制机械臂臂吗？还是将这些离散点求逆解后再进行关节空间下的平滑处理? 通常情况下，在进行笛卡尔空间轨迹规划后，会得到一系列离散的笛卡尔空间点。这些点可以通过插值或者平滑处理来得到连续的笛卡尔空间轨迹。然后再将这些连续的轨迹点转化为对应的关节角度，最终使用关节空间下的轨迹规划算法来规划机械臂的轨迹。这是因为在机械臂控制中，关节空间是机械臂运动的本质空间，能够更加稳定和精确地控制机械臂运动，因此需要将笛卡尔空间点转换到关节空间下进行控制。&#xA;6都已经平滑过了为什么还要再进行一下关节空间轨迹规划? 即使笛卡尔空间下的轨迹规划已经平滑过，但机械臂在运动过程中可能会受到各种因素的影响，比如摩擦力、惯性、重力等，这些因素可能会导致机械臂在运动过程中出现抖动、偏差等问题，从而影响其精度和稳定性。因此，在进行关键路径的轨迹规划时，通常会将笛卡尔空间下的轨迹点再转化为关节空间下的轨迹点，进行关节空间下的平滑处理，以提高机械臂的运动精度和稳定性。同时，关节空间下的规划能够更好地考虑机械臂本身的运动特性，如关节角度的限制等。平滑处理是为了使机械臂运动更加平滑，减少抖动和震动，提高精度和稳定性。常用的平滑处理方法包括插值、滤波和优化等。具体方法可以根据具体情况选择。例如，可以使用三次样条插值来平滑处理笛卡尔空间轨迹，也可以使用低通滤波器来去除高频噪声，还可以使用优化算法来对轨迹进行优化，使得机械臂运动更加平滑和高效。&#xA;7笛卡尔空间轨迹规划且平滑处理完成后，应该是很多点吧，将这些点都逆解成关节角度再进行关节空间下的轨迹平滑吗? 是的，通常情况下，笛卡尔空间下轨迹规划完成后会得到一系列离散的笛卡尔空间点，然后通过逆运动学求解这些点对应的机械臂关节角度，再对关节角度进行平滑处理。接着，再通过关节空间下的轨迹规划算法对处理后的关节角度进行轨迹规划，得到一系列平滑的关节角度点，最终通过控制机械臂实现路径跟踪。&#xA;8那我在关节空间下进行轨迹规划插值一次后，能再进行一次差值吗? 在关节空间下进行轨迹规划插值后，可以再进行差值操作，但需要注意的是，进行差值操作可能会导致轨迹不平滑，甚至出现运动不连续的情况。因此，是否需要进行差值操作需要根据具体情况而定，以保证运动的平滑和连续。在关节空间下进行插值会使轨迹更平滑，但是插值次数过多也可能会引入过度平滑的问题，从而影响机械臂的响应速度和运动精度。通常情况下，插值次数不需要过多，一般一个插值点周围加入2-3个插值点即可达到较好的平滑效果。在进行笛卡尔空间下的插值时，插多少个点需要根据具体的情况而定，通常需要考虑机械臂的动态响应能力和规划路径的平滑度等因素。如果插值的点数过多，会增加机械臂的计算负担，降低规划的效率；如果插值的点数过少，则可能会导致机械臂在运动过程中出现抖动或者运动轨迹不够平滑等问题。因此，需要根据实际情况进行选择。一般来说，建议在规划路径的起点、终点和路径拐点等位置插入足够多的点，以确保路径的平滑性和准确性。&#xA;9 moveit调用rrt进行关节空间轨迹规划的指令代码如下： import moveit_commander from moveit_msgs.msg import RobotTrajectory # 初始化moveit_commander和rospy节点 moveit_commander.roscpp_initialize(sys.argv) rospy.init_node(&amp;#39;move_group_python_interface_tutorial&amp;#39;, anonymous=True) # 创建机械臂的控制接口 group = moveit_commander.MoveGroupCommander(&amp;#34;manipulator&amp;#34;) # 设置目标关节角度 joint_goal = group.get_current_joint_values() joint_goal[0] = 0 joint_goal[1] = -pi/4 joint_goal[2] = 0 joint_goal[3] = -pi/4 joint_goal[4] = 0 joint_goal[5] = pi/3 group.set_joint_value_target(joint_goal) # 进行关节空间下的规划 plan = group.plan() # 得到规划出的关节角度路径 joint_path = plan.joint_trajectory.points # 对关节角度路径进行插值，得到关节空间下的平滑路径 interpolated_joint_path = interpolate_joint_path(joint_path) # 将关节空间下的路径转化为机械臂的轨迹 joint_trajectory = RobotTrajectory() joint_trajectory.</description>
    </item>
    <item>
      <title>20240320 Cmd</title>
      <link>https://alienwer.github.io/20240320-cmd/</link>
      <pubDate>Wed, 20 Mar 2024 00:49:59 +0800</pubDate>
      <guid>https://alienwer.github.io/20240320-cmd/</guid>
      <description>运行操作 ``` CMD命令：开始－&amp;gt;运行－&amp;gt;键入cmd或command(在命令行里可以看到系统版本、文件系统版本) ``` CMD命令锦集: gpedit.msc&amp;mdash;&amp;ndash;组策略 sndrec32&amp;mdash;&amp;mdash;-录音机 Nslookup&amp;mdash;&amp;mdash;-IP地址侦测器 ，是一个 监测网络中 DNS 服务器是否能正确实现域名解析的命令行工具。 它在 Windows NT/2000/XP 中均可使用 , 但在 Windows 98 中却没有集成这一个工具。 explorer&amp;mdash;&amp;mdash;-打开资源管理器 logoff&amp;mdash;&amp;mdash;&amp;mdash;注销命令 shutdown&amp;mdash;&amp;mdash;-60秒倒计时关机命令 lusrmgr.msc&amp;mdash;-本机用户和组 services.msc&amp;mdash;本地服务设置 oobe/msoobe /a&amp;mdash;-检查XP是否激活 notepad&amp;mdash;&amp;mdash;&amp;ndash;打开记事本 cleanmgr&amp;mdash;&amp;mdash;-垃圾整理 net start messenger&amp;mdash;-开始信使服务 compmgmt.msc&amp;mdash;计算机管理 net stop messenger&amp;mdash;&amp;ndash;停止信使服务 conf&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;启动netmeeting dvdplay&amp;mdash;&amp;mdash;&amp;ndash;DVD播放器 charmap&amp;mdash;&amp;mdash;&amp;ndash;启动字符映射表 diskmgmt.msc&amp;mdash;磁盘管理实用程序 calc&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;启动计算器 dfrg.msc&amp;mdash;&amp;mdash;-磁盘碎片整理程序 chkdsk.exe&amp;mdash;&amp;ndash;Chkdsk磁盘检查 devmgmt.msc&amp;mdash; 设备管理器 regsvr32 /u *.dll&amp;mdash;-停止dll文件运行 drwtsn32&amp;mdash;&amp;mdash; 系统医生 rononce -p&amp;mdash;-15秒关机 dxdiag&amp;mdash;&amp;mdash;&amp;mdash;检查DirectX信息 regedt32&amp;mdash;&amp;mdash;-注册表编辑器 Msconfig.exe&amp;mdash;系统配置实用程序 rsop.msc&amp;mdash;&amp;mdash;-组策略结果集 mem.exe&amp;mdash;&amp;mdash;&amp;ndash;显示内存使用情况 regedit.exe&amp;mdash;-注册表 winchat&amp;mdash;&amp;mdash;&amp;ndash;XP自带局域网聊天 progman&amp;mdash;&amp;mdash;&amp;ndash;程序管理器 winmsd&amp;mdash;&amp;mdash;&amp;mdash;系统信息 perfmon.msc&amp;mdash;-计算机性能监测程序 winver&amp;mdash;&amp;mdash;&amp;mdash;检查Windows版本 sfc/scannow&amp;mdash;&amp;ndash;扫描错误并复原 taskmgr&amp;mdash;&amp;ndash;任务管理器（2000/xp/2003 wmimgmt.msc&amp;mdash;-打开windows管理体系结构(WMI) wupdmgr&amp;mdash;&amp;mdash;&amp;ndash;windows更新程序 wscript&amp;mdash;&amp;mdash;&amp;ndash;windows脚本宿主设置 write&amp;mdash;&amp;mdash;&amp;mdash;-写字板 wiaacmgr&amp;mdash;&amp;mdash;-扫描仪和照相机向导 winchat&amp;mdash;&amp;mdash;&amp;ndash;XP自带局域网聊天 mplayer2&amp;mdash;&amp;mdash;-简易widnows media player mspaint&amp;mdash;&amp;mdash;&amp;ndash;画图板 mstsc&amp;mdash;&amp;mdash;&amp;mdash;-远程桌面连接 magnify&amp;mdash;&amp;mdash;&amp;ndash;放大镜实用程序 mmc&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;打开控制台 mobsync&amp;mdash;&amp;mdash;&amp;ndash;同步命令 iexpress&amp;mdash;&amp;mdash;-木马捆绑工具，系统自带 fsmgmt.</description>
    </item>
    <item>
      <title>Test</title>
      <link>https://alienwer.github.io/test/</link>
      <pubDate>Tue, 19 Mar 2024 18:07:57 +0800</pubDate>
      <guid>https://alienwer.github.io/test/</guid>
      <description>This is a page about »Test«.</description>
    </item>
    <item>
      <title>Markdown Syntax Guide</title>
      <link>https://alienwer.github.io/markdown-syntax-guide/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://alienwer.github.io/markdown-syntax-guide/</guid>
      <description>&lt;p&gt;For a quick cheatsheet, check out &lt;a href=&#34;https://simplemde.com/markdown-guide&#34;&gt;https://simplemde.com/markdown-guide&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
